#Given an input string, print out thenumbers as photos from MNIST database using machine learning

# -*- coding: utf-8 -*-
"""printing_out_nums_mnist.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ZRjpULbERnApInMK8SZJvrUkpCA2YxEY
"""

import keras
keras.__version__
import matplotlib.pyplot as plt
from keras.datasets import mnist

(train_images, train_labels), (test_images, test_labels) = mnist.load_data()

User_String = "58912"

def drawing_with_mnist(Input):
  for element in Input:
    re_element = int(element)
    index = 0
    for number in train_labels:
    
      if(re_element == number):
        digit = train_images[index]


        plt.imshow(digit, cmap=plt.cm.gray)
        
        break
      plt.show()
      index += 1

#put User_String into the drawing_with_mnist function and then print the image to console
print("Ryan Michels - \"" + User_String +"\"")
drawing_with_mnist(User_String)


#-----------------------------------------------Another program, Same thing - different photos.

import numpy as np
from keras.datasets import cifar10


(train_features, train_labels), (test_features, test_labels) = cifar10.load_data()
num_train, img_channels, img_rows, img_cols =  train_features.shape
num_test, _, _, _ =  test_features.shape
num_classes = len(np.unique(train_labels))

class_names = ['airplane','automobile','bird','cat','deer',
               'dog','frog','horse','ship','truck']
fig = plt.figure(figsize=(8,3))
for i in range(num_classes):
    ax = fig.add_subplot(2, 5, 1 + i, xticks=[], yticks=[])
    idx = np.where(train_labels[:]==i)[0]
    features_idx = train_features[idx,::]
    img_num = np.random.randint(features_idx.shape[0])
    im = np.transpose(features_idx[img_num, ::], (0, 1, 2))
    ax.set_title(class_names[i])
    plt.imshow(im)
plt.show()